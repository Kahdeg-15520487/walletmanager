@page "/"
@attribute [Authorize]
@using Microsoft.Extensions.Configuration
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using UI.DTOs
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>Wallets</PageTitle>

<h1>Wallets</h1>

@if (Wallets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Totals: @Totals() VNĐ</h3>
    @if (Wallets.Length == 0)
    {
        <p>You don't have any wallet!</p>
        <a href="createwallet">Create new Wallet</a>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Balance</th>
                    <th>Note</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var s in Wallets)
                {
                    <tr>
                        <td><a href="walletbalance/@s.Id">@s.Name</a></td>
                        <td>@s.Balance VNĐ</td>
                        <td>@s.Note</td>
                    </tr>
                }
                <tr>
                    <td><a href="createwallet">Create new Wallet</a></td>
                </tr>
            </tbody>
        </table>
    }
}

@code {
    private WalletResponseDto[] Wallets;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Wallets = (await Http.GetFromJsonAsync<WalletResponseDto[]>("api/wallet")).ToArray();
        }
        catch (HttpRequestException ex)
        {
            switch (ex.StatusCode)
            {
                case System.Net.HttpStatusCode.NotFound:
                    NavManager.NavigateTo("Register");
                    break;
                default:
                    throw ex;
            }
        }
    }

    private float Totals() => Wallets.Sum(w => w.Balance);
}
