@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject HttpClient Http;

<AuthorizeView>
    <Authorized>
        @if (User == null)
        {
            <a href="register">Register</a>
        }
        else
        {
            <p style="padding-top: 15px;padding-right: 10px;">Hello, @User.UserName</p>
            <a style="padding-right: 10px;" href="profile">Profile</a>
            <a style="padding-right: 10px;" href="#" @onclick="BeginSignOut">Log out</a>
        }
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private UserProfileModel User = null;

    protected override async Task OnInitializedAsync()
    {
        User = (await Http.GetFromJsonAsync<UserProfileModel>("api/user"));
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    class UserProfileModel
    {
        public string UserName { get; set; }
    }
}